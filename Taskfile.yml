version: '3'

tasks:
  deps:
    desc: Install system dependencies, swag, gotestsum, and go-test-report
    cmds:
      - |
        if command -v apt-get > /dev/null; then
          echo "Using apt-get..."
          sudo apt-get update
          sudo apt-get install -y build-essential libpam-dev
        elif command -v dnf > /dev/null; then
          echo "Using dnf..."
          sudo dnf groupinstall -y "Development Tools"
          sudo dnf install -y pam-devel
        elif command -v yum > /dev/null; then
          echo "Using yum..."
          sudo yum groupinstall -y "Development Tools"
          sudo yum install -y pam-devel
        else
          echo "Unsupported package manager. Please install the dependencies manually."
          exit 1
        fi
      - go install github.com/swaggo/swag/cmd/swag@latest
      - go install gotest.tools/gotestsum@latest
      - go install github.com/FloSch62/go-test2html@latest

  tidy:
    desc: Run go mod tidy
    cmds:
      - go mod tidy

  swag:
    desc: Generate Swagger docs
    cmds:
      - swag init -g cmd/server/main.go

  build:
    desc: Build the clab-api-server binary with version information
    cmds:
      - |
        VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "development")
        COMMIT=$(git rev-parse --short HEAD 2>/dev/null || echo "unknown")
        DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
        go build -ldflags="-X main.version=$VERSION -X main.commit=$COMMIT -X main.date=$DATE" -o clab-api-server ./cmd/server

  create-test-dir:
    desc: Create test reports directory
    cmds:
      - mkdir -p test-reports

  run-tests:
    desc: Run tests with gotestsum (may fail)
    internal: true
    cmds:
      - |
        echo "Running tests..."
        export GOTEST_LOG_LEVEL=debug
        set -a && [ -f tests_go/.env ] && . tests_go/.env ; set +a
        gotestsum --format=standard-verbose --jsonfile=test-reports/test-output.json ./... || true

  generate-report:
    desc: Generate HTML test report
    internal: true
    cmds:
      - |
        echo "Generating HTML report..."
        go-test2html --input test-reports/test-output.json --output test-reports/test-report.html

  test:
    desc: Run tests with gotestsum and generate HTML report
    deps: [create-test-dir]
    cmds:
      - task: run-tests
      - task: generate-report
      # Now determine the actual test result by examining the JSON file
      - |
        if grep -q '"Action":"fail"' test-reports/test-output.json; then
          echo "Tests failed! See report at test-reports/test-report.html"
          exit 1
        else
          echo "All tests passed! See report at test-reports/test-report.html"
          exit 0
        fi

  default:
    desc: Run all key steps (tidy, swag, build)
    cmds:
      - task: tidy
      - task: swag
      - task: build